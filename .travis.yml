# Based on the "travis-minikube" template
# https://github.com/LiliC/travis-minikube/blob/1d5c0f1092c407f3913c6e5642e8091f12193b25/.travis.yml

sudo: required
dist: trusty
language: java
jdk: oraclejdk8

env:
- CHANGE_MINIKUBE_NONE_USER=true # This moves Kubernetes specific config files.

install:
# Required by bin/run-integration-tests.sh
- sudo apt-get install xmlstarlet
# Required to build reactive-cli (aka "rp")
- curl https://raw.githubusercontent.com/scala-native/scala-native/master/scripts/travis_setup.sh | bash -x
# Default "install" with GPG signing disabled
- mvn install -DskipTests=true -Dmaven.javadoc.skip=true -Dgpg.skip=true -B -V

before_script:
# Make root mounted as rshared to fix kube-dns issues.
- sudo mount --make-rshared /
# Download kubectl, which is a requirement for using minikube.
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube.
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=v1.10.0
# Fix the kubectl context, as it's often stale.
- minikube update-context
# Wait for Kubernetes to be up and ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

script:
# Default "script" for Maven projects: https://docs.travis-ci.com/user/languages/java/#Maven-Default-Script-Command
- mvn test -B
- kubectl cluster-info
# Verify kube-addon-manager.
# kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to be available"; kubectl get pods --all-namespaces; done
# Wait for kube-dns to be ready.
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
- bin/run-integration-tests.sh

# TODO: Add caching of $HOME/.m2/repository without compromising the integrity of CI
cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt

before_cache:
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -delete
  - find $HOME/.sbt        -name "*.lock"               -delete

notifications:
  email:
    on_success: never
